Shader "Dragon/Scene/Scenario-Dust_FX" {
Properties {
 _TintColor ("Tint Color", Color) = (0.5,0.5,0.5,0.5)
 _DustTex ("Particle Texture", 2D) = "black" { }
 _NoiseTex ("Noise Texture", 2D) = "white" { }
 _MaskTex ("Mask Texture", 2D) = "white" { }
 _DustTileX ("Dust Tiling X", Float) = 4
 _DustTileY ("Dust Tiling Y", Float) = 12
}
SubShader { 
 Tags { "QUEUE"="Transparent" }
 Pass {
  Tags { "QUEUE"="Transparent" }
  ZWrite Off
  Stencil {
   Ref 2
   Pass Replace
  }
  Blend SrcAlpha One
  GpuProgramID 57107
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _DustTex_ST;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _DustTex_ST        c4       1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mad oT0.xy, v2, c4, c4.zwzw
					    mov oD0, v1
					
					// approximately 6 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _DustTex_ST;
						vec4 unused_0_2[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _DustTex_ST.xy + _DustTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _DustTex_ST;
						vec4 unused_0_2[2];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _DustTex_ST.xy + _DustTex_ST.zw;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _DustTex;
					//   float _DustTileX;
					//   float _DustTileY;
					//   sampler2D _MaskTex;
					//   sampler2D _NoiseTex;
					//   float4 _Time;
					//   float4 _TintColor;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Time        c0       1
					//   _TintColor   c1       1
					//   _DustTileX   c2       1
					//   _DustTileY   c3       1
					//   _DustTex     s0       1
					//   _NoiseTex    s1       1
					//   _MaskTex     s2       1
					//
					
					    ps_2_0
					    def c4, -1.5, 4, 3, 0.25
					    def c5, 10, 0, 0, 0
					    dcl v0
					    dcl_pp t0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0.xy, c4
					    mul r0.x, r0.x, c0.x
					    mad_pp r1.y, t0.y, c3.x, r0.x
					    mov r0.x, c0.x
					    mad_pp r1.x, t0.x, c2.x, r0.x
					    mad_pp r0.y, c0.x, r0.y, t0.y
					    mul_pp r0.x, t0.x, c4.z
					    texld r1, r1, s0
					    texld r0, r0, s1
					    texld_pp r2, t0, s2
					    mul_pp r0, r0, c4.w
					    mad_pp r0, r1, c5.x, r0
					    mul_pp r0, r2, r0
					    mul_pp r0, r0, v0
					    mul_pp r0, r0, c1
					    mul_pp r0, r0, c4.z
					    mov_pp oC0, r0
					
					// approximately 17 instruction slots used (3 texture, 14 arithmetic)"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
						float _DustTileX;
						float _DustTileY;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _DustTex;
					uniform  sampler2D _NoiseTex;
					uniform  sampler2D _MaskTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat16_0;
					vec4 u_xlat10_0;
					vec2 u_xlat1;
					vec4 u_xlat16_1;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0.x = _Time.x * -1.5;
					    u_xlat0.y = vs_TEXCOORD0.y * _DustTileY + u_xlat0.x;
					    u_xlat0.x = vs_TEXCOORD0.x * _DustTileX + _Time.x;
					    u_xlat10_0 = texture(_DustTex, u_xlat0.xy);
					    u_xlat1.y = _Time.x * 4.0 + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x * 3.0;
					    u_xlat10_1 = texture(_NoiseTex, u_xlat1.xy);
					    u_xlat16_1 = u_xlat10_1 * vec4(0.25, 0.25, 0.25, 0.25);
					    u_xlat16_0 = u_xlat10_0 * vec4(10.0, 10.0, 10.0, 10.0) + u_xlat16_1;
					    u_xlat10_1 = texture(_MaskTex, vs_TEXCOORD0.xy);
					    u_xlat16_0 = u_xlat16_0 * u_xlat10_1;
					    u_xlat0 = u_xlat16_0 * vs_COLOR0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    SV_Target0 = u_xlat0 * vec4(3.0, 3.0, 3.0, 3.0);
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
						float _DustTileX;
						float _DustTileY;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 _Time;
						vec4 unused_1_1[8];
					};
					uniform  sampler2D _DustTex;
					uniform  sampler2D _NoiseTex;
					uniform  sampler2D _MaskTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat16_0;
					vec4 u_xlat10_0;
					vec2 u_xlat1;
					vec4 u_xlat16_1;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0.x = _Time.x * -1.5;
					    u_xlat0.y = vs_TEXCOORD0.y * _DustTileY + u_xlat0.x;
					    u_xlat0.x = vs_TEXCOORD0.x * _DustTileX + _Time.x;
					    u_xlat10_0 = texture(_DustTex, u_xlat0.xy);
					    u_xlat1.y = _Time.x * 4.0 + vs_TEXCOORD0.y;
					    u_xlat1.x = vs_TEXCOORD0.x * 3.0;
					    u_xlat10_1 = texture(_NoiseTex, u_xlat1.xy);
					    u_xlat16_1 = u_xlat10_1 * vec4(0.25, 0.25, 0.25, 0.25);
					    u_xlat16_0 = u_xlat10_0 * vec4(10.0, 10.0, 10.0, 10.0) + u_xlat16_1;
					    u_xlat10_1 = texture(_MaskTex, vs_TEXCOORD0.xy);
					    u_xlat16_0 = u_xlat16_0 * u_xlat10_1;
					    u_xlat0 = u_xlat16_0 * vs_COLOR0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    SV_Target0 = u_xlat0 * vec4(3.0, 3.0, 3.0, 3.0);
					    return;
					}"
}
}
 }
 Pass {
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent" }
  ZWrite Off
  Blend SrcAlpha One
  GpuProgramID 93335
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_2_0
					    def c4, 0, 1, 0, 0
					    dcl_position v0
					    dcl_color v1
					    max r0, v1, c4.x
					    min oD0, r0, c4.y
					    mad r0, v0.xyzx, c4.yyyx, c4.xxxy
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					
					// approximately 7 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					out vec4 vs_COLOR0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					out vec4 vs_COLOR0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_modelview0;
					//   row_major float4x4 glstate_matrix_mvp;
					//   float4 unity_FogParams;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   glstate_matrix_mvp        c0       4
					//   glstate_matrix_modelview0 c4       3
					//   unity_FogParams           c7       1
					//
					
					    vs_2_0
					    def c8, 1, 0, 0, 0
					    dcl_position v0
					    dcl_color v1
					    max r0, v1, c8.y
					    min oD0, r0, c8.x
					    mad r0, v0.xyzx, c8.xxxy, c8.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp3 r1.x, r1, r1
					    rsq r1.x, r1.x
					    rcp r1.x, r1.x
					    mad r1.x, r1.x, c7.z, c7.w
					    max r1.x, r1.x, c8.y
					    min oT0.x, r1.x, c8.x
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					
					// approximately 16 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_0_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_1_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					out vec4 vs_COLOR0;
					out float vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD0 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0 = clamp(vs_TEXCOORD0, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_0_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_1_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					out vec4 vs_COLOR0;
					out float vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD0 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD0 = clamp(vs_TEXCOORD0, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					    ps_2_0
					    dcl v0
					    mov_pp oC0, v0
					
					// approximately 1 instruction slot used"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					in  vec4 vs_COLOR0;
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vs_COLOR0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					in  vec4 vs_COLOR0;
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vs_COLOR0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 unity_FogColor;
					//
					//
					// Registers:
					//
					//   Name           Reg   Size
					//   -------------- ----- ----
					//   unity_FogColor c0       1
					//
					
					    ps_2_0
					    dcl v0
					    dcl_pp t0.x
					    add_pp r0.xyz, v0, -c0
					    mad_pp r0.xyz, t0.x, r0, c0
					    mov_pp r0.w, v0.w
					    mov_pp oC0, r0
					
					// approximately 4 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_0_1;
					};
					in  vec4 vs_COLOR0;
					in  float vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					void main()
					{
					    u_xlat0.xyz = vs_COLOR0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(vs_TEXCOORD0) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.w = vs_COLOR0.w;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_0_1;
					};
					in  vec4 vs_COLOR0;
					in  float vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					void main()
					{
					    u_xlat0.xyz = vs_COLOR0.xyz + (-unity_FogColor.xyz);
					    SV_Target0.xyz = vec3(vs_TEXCOORD0) * u_xlat0.xyz + unity_FogColor.xyz;
					    SV_Target0.w = vs_COLOR0.w;
					    return;
					}"
}
}
 }
}
}