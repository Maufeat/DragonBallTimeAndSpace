Shader "Dragon/Scene/Scenario-Opaque" {
Properties {
 _Outline ("Outline", Range(0,2)) = 0.5
 _OutlineColor ("Outline Color", Color) = (0,0,0,1)
 _Color ("Color", Color) = (0.501961,0.501961,0.501961,1)
 _Specular ("Specular", Color) = (1,1,1,1)
 _Gloss ("Gloss", Range(8,256)) = 20
 _MainTex ("Base Color", 2D) = "white" { }
 _lightmap ("lightmap", 2D) = "white" { }
 _lightmapcolor ("lightmap color", Color) = (0.5,0.5,0.5,1)
 _lightmapValue ("lightmap Value", Float) = 0
 _Rimmap ("Rimmap", 2D) = "white" { }
}
SubShader { 
 Pass {
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" }
  Stencil {
   Ref 2
   Pass Replace
  }
  GpuProgramID 906
Program "vp" {
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _MainTex_ST        c10      1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c10, c10.zwzw
					
					// approximately 14 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _ProjectionParams  c10      1
					//   _ScreenParams      c11      1
					//   _MainTex_ST        c12      1
					//
					
					    vs_2_0
					    def c13, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c12, c12.zwzw
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.w, c3, v0
					    mul r1.xyz, r0.xyww, c13.x
					    mul r1.w, r1.y, c10.x
					    mad oT3.xy, r1.z, c11.zwzw, r1.xwzw
					    dp4 r0.z, c2, v0
					    mov oPos, r0
					    mov oT3.zw, r0
					
					// approximately 19 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _MainTex_ST        c10      1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c10, c10.zwzw
					
					// approximately 14 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _ProjectionParams  c10      1
					//   _ScreenParams      c11      1
					//   _MainTex_ST        c12      1
					//
					
					    vs_2_0
					    def c13, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c12, c12.zwzw
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.w, c3, v0
					    mul r1.xyz, r0.xyww, c13.x
					    mul r1.w, r1.y, c10.x
					    mad oT3.xy, r1.z, c11.zwzw, r1.xwzw
					    dp4 r0.z, c2, v0
					    mov oPos, r0
					    mov oT3.zw, r0
					
					// approximately 19 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _MainTex_ST        c10      1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c10, c10.zwzw
					
					// approximately 14 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _ProjectionParams  c10      1
					//   _ScreenParams      c11      1
					//   _MainTex_ST        c12      1
					//
					
					    vs_2_0
					    def c13, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c12, c12.zwzw
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.w, c3, v0
					    mul r1.xyz, r0.xyww, c13.x
					    mul r1.w, r1.y, c10.x
					    mad oT3.xy, r1.z, c11.zwzw, r1.xwzw
					    dp4 r0.z, c2, v0
					    mov oPos, r0
					    mov oT3.zw, r0
					
					// approximately 19 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _MainTex_ST        c10      1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c10, c10.zwzw
					
					// approximately 14 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_1_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					vec4 u_xlat0;
					vec3 u_xlat1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat6 = inversesqrt(u_xlat6);
					    vs_TEXCOORD0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 _Object2World;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 _World2Object;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Object2World      c4       3
					//   _World2Object      c7       3
					//   _ProjectionParams  c10      1
					//   _ScreenParams      c11      1
					//   _MainTex_ST        c12      1
					//
					
					    vs_2_0
					    def c13, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_texcoord v2
					    mul r0.xyz, v1.y, c8
					    mad r0.xyz, c7, v1.x, r0
					    mad r0.xyz, c9, v1.z, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul oT0.xyz, r0.w, r0
					    dp4 oT1.x, c4, v0
					    dp4 oT1.y, c5, v0
					    dp4 oT1.z, c6, v0
					    mad oT2.xy, v2, c12, c12.zwzw
					    dp4 r0.x, c0, v0
					    dp4 r0.y, c1, v0
					    dp4 r0.w, c3, v0
					    mul r1.xyz, r0.xyww, c13.x
					    mul r1.w, r1.y, c10.x
					    mad oT3.xy, r1.z, c11.zwzw, r1.xwzw
					    dp4 r0.z, c2, v0
					    mov oPos, r0
					    mov oT3.zw, r0
					
					// approximately 19 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "FogOn" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[9];
						vec4 _MainTex_ST;
						vec4 unused_0_2[6];
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					in  vec2 in_TEXCOORD0;
					out vec3 vs_TEXCOORD0;
					out vec3 vs_TEXCOORD1;
					out vec2 vs_TEXCOORD2;
					out vec4 vs_TEXCOORD3;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					float u_xlat10;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    u_xlat1.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat1.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat1.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat2.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat2.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat2.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat2.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat2.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat2.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat2.xyz;
					    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat10 = inversesqrt(u_xlat10);
					    vs_TEXCOORD0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    vs_TEXCOORD1.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat1.xyz;
					    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat1.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD3.zw = u_xlat0.zw;
					    u_xlat1.w = u_xlat1.y * _ProjectionParams.x;
					    vs_TEXCOORD3.xy = u_xlat1.zz + u_xlat1.xw;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float _Gloss;
					//   float4 _LightColor0;
					//   sampler2D _MainTex;
					//   float4 _Specular;
					//   float3 _WorldSpaceCameraPos;
					//   float4 _WorldSpaceLightPos0;
					//   float4 glstate_lightmodel_ambient;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _WorldSpaceCameraPos       c0       1
					//   _WorldSpaceLightPos0       c1       1
					//   glstate_lightmodel_ambient c2       1
					//   _LightColor0               c3       1
					//   _Color                     c4       1
					//   _Specular                  c5       1
					//   _Gloss                     c6       1
					//   _MainTex                   s0       1
					//
					
					    ps_2_0
					    def c7, 0, 2, 1, 0
					    dcl t0.xyz
					    dcl t1.xyz
					    dcl_pp t2.xy
					    dcl_2d s0
					    texld r0, t2, s0
					    add r1.xyz, -t1, c0
					    dp3 r0.w, r1, r1
					    rsq r0.w, r0.w
					    nrm_pp r2.xyz, c1
					    mad_pp r1.xyz, r1, r0.w, r2
					    nrm_pp r3.xyz, r1
					    nrm_pp r1.xyz, t0
					    dp3_pp r0.w, r1, r3
					    dp3_pp r1.x, r1, r2
					    max_pp r2.x, r1.x, c7.x
					    max r1.x, r0.w, c7.x
					    pow r0.w, r1.x, c6.x
					    mov r1.xyz, c3
					    mul r1.xyz, r1, c5
					    mul_pp r1.xyz, r0.w, r1
					    mul_pp r0.xyz, r0, c4
					    mul_pp r2.yzw, r0.wzyx, c3.wzyx
					    mul_pp r0.xyz, r0, c2
					    mad_pp r1.xyz, r2.wzyx, r2.x, r1
					    mad_pp r0.xyz, r0, c7.y, r1
					    mov_pp r0.w, c7.z
					    mov_pp oC0, r0
					
					// approximately 31 instruction slots used (1 texture, 30 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    SV_Target0.xyz = u_xlat1.xyz * vec3(2.0, 2.0, 2.0) + u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    SV_Target0.xyz = u_xlat1.xyz * vec3(2.0, 2.0, 2.0) + u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float _Gloss;
					//   float4 _LightColor0;
					//   sampler2D _MainTex;
					//   sampler2D _ShadowMapTexture;
					//   float4 _Specular;
					//   float3 _WorldSpaceCameraPos;
					//   float4 _WorldSpaceLightPos0;
					//   float4 glstate_lightmodel_ambient;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _WorldSpaceCameraPos       c0       1
					//   _WorldSpaceLightPos0       c1       1
					//   glstate_lightmodel_ambient c2       1
					//   _LightColor0               c3       1
					//   _Color                     c4       1
					//   _Specular                  c5       1
					//   _Gloss                     c6       1
					//   _ShadowMapTexture          s0       1
					//   _MainTex                   s1       1
					//
					
					    ps_2_0
					    def c7, 0, 1, 0, 0
					    dcl t0.xyz
					    dcl t1.xyz
					    dcl_pp t2.xy
					    dcl_pp t3
					    dcl_2d s0
					    dcl_2d s1
					    texld r0, t2, s1
					    texldp_pp r1, t3, s0
					    add r2.xyz, -t1, c0
					    dp3 r0.w, r2, r2
					    rsq r0.w, r0.w
					    nrm_pp r3.xyz, c1
					    mad_pp r2.xyz, r2, r0.w, r3
					    nrm_pp r4.xyz, r2
					    nrm_pp r2.xyz, t0
					    dp3_pp r0.w, r2, r4
					    dp3_pp r1.y, r2, r3
					    max_pp r2.x, r1.y, c7.x
					    max r1.y, r0.w, c7.x
					    pow r0.w, r1.y, c6.x
					    mov r3.xyz, c3
					    mul r1.yzw, r3.wzyx, c5.wzyx
					    mul_pp r1.yzw, r0.w, r1
					    mul_pp r0.xyz, r0, c4
					    mul_pp r2.yzw, r0.wzyx, c3.wzyx
					    mul_pp r0.xyz, r0, c2
					    add_pp r0.xyz, r0, r0
					    mad_pp r1.yzw, r2, r2.x, r1
					    mad_pp r0.xyz, r1.wzyx, r1.x, r0
					    mov_pp r0.w, c7.y
					    mov_pp oC0, r0
					
					// approximately 33 instruction slots used (2 texture, 31 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _ShadowMapTexture;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;
					    u_xlat10_2 = texture(_ShadowMapTexture, u_xlat2.xy);
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat10_2.xxx + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _ShadowMapTexture;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;
					    u_xlat10_2 = texture(_ShadowMapTexture, u_xlat2.xy);
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat10_2.xxx + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float _Gloss;
					//   float4 _LightColor0;
					//   sampler2D _MainTex;
					//   float4 _Specular;
					//   float3 _WorldSpaceCameraPos;
					//   float4 _WorldSpaceLightPos0;
					//   float4 glstate_lightmodel_ambient;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _WorldSpaceCameraPos       c0       1
					//   _WorldSpaceLightPos0       c1       1
					//   glstate_lightmodel_ambient c2       1
					//   _LightColor0               c3       1
					//   _Color                     c4       1
					//   _Specular                  c5       1
					//   _Gloss                     c6       1
					//   _MainTex                   s0       1
					//
					
					    ps_2_0
					    def c7, 0, 2, 1, 0
					    dcl t0.xyz
					    dcl t1.xyz
					    dcl_pp t2.xy
					    dcl_2d s0
					    texld r0, t2, s0
					    add r1.xyz, -t1, c0
					    dp3 r0.w, r1, r1
					    rsq r0.w, r0.w
					    nrm_pp r2.xyz, c1
					    mad_pp r1.xyz, r1, r0.w, r2
					    nrm_pp r3.xyz, r1
					    nrm_pp r1.xyz, t0
					    dp3_pp r0.w, r1, r3
					    dp3_pp r1.x, r1, r2
					    max_pp r2.x, r1.x, c7.x
					    max r1.x, r0.w, c7.x
					    pow r0.w, r1.x, c6.x
					    mov r1.xyz, c3
					    mul r1.xyz, r1, c5
					    mul_pp r1.xyz, r0.w, r1
					    mul_pp r0.xyz, r0, c4
					    mul_pp r2.yzw, r0.wzyx, c3.wzyx
					    mul_pp r0.xyz, r0, c2
					    mad_pp r1.xyz, r2.wzyx, r2.x, r1
					    mad_pp r0.xyz, r0, c7.y, r1
					    mov_pp r0.w, c7.z
					    mov_pp oC0, r0
					
					// approximately 31 instruction slots used (1 texture, 30 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    SV_Target0.xyz = u_xlat1.xyz * vec3(2.0, 2.0, 2.0) + u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    SV_Target0.xyz = u_xlat1.xyz * vec3(2.0, 2.0, 2.0) + u_xlat0.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float _Gloss;
					//   float4 _LightColor0;
					//   sampler2D _MainTex;
					//   sampler2D _ShadowMapTexture;
					//   float4 _Specular;
					//   float3 _WorldSpaceCameraPos;
					//   float4 _WorldSpaceLightPos0;
					//   float4 glstate_lightmodel_ambient;
					//
					//
					// Registers:
					//
					//   Name                       Reg   Size
					//   -------------------------- ----- ----
					//   _WorldSpaceCameraPos       c0       1
					//   _WorldSpaceLightPos0       c1       1
					//   glstate_lightmodel_ambient c2       1
					//   _LightColor0               c3       1
					//   _Color                     c4       1
					//   _Specular                  c5       1
					//   _Gloss                     c6       1
					//   _ShadowMapTexture          s0       1
					//   _MainTex                   s1       1
					//
					
					    ps_2_0
					    def c7, 0, 1, 0, 0
					    dcl t0.xyz
					    dcl t1.xyz
					    dcl_pp t2.xy
					    dcl_pp t3
					    dcl_2d s0
					    dcl_2d s1
					    texld r0, t2, s1
					    texldp_pp r1, t3, s0
					    add r2.xyz, -t1, c0
					    dp3 r0.w, r2, r2
					    rsq r0.w, r0.w
					    nrm_pp r3.xyz, c1
					    mad_pp r2.xyz, r2, r0.w, r3
					    nrm_pp r4.xyz, r2
					    nrm_pp r2.xyz, t0
					    dp3_pp r0.w, r2, r4
					    dp3_pp r1.y, r2, r3
					    max_pp r2.x, r1.y, c7.x
					    max r1.y, r0.w, c7.x
					    pow r0.w, r1.y, c6.x
					    mov r3.xyz, c3
					    mul r1.yzw, r3.wzyx, c5.wzyx
					    mul_pp r1.yzw, r0.w, r1
					    mul_pp r0.xyz, r0, c4
					    mul_pp r2.yzw, r0.wzyx, c3.wzyx
					    mul_pp r0.xyz, r0, c2
					    add_pp r0.xyz, r0, r0
					    mad_pp r1.yzw, r2, r2.x, r1
					    mad_pp r0.xyz, r1.wzyx, r1.x, r0
					    mov_pp r0.w, c7.y
					    mov_pp oC0, r0
					
					// approximately 33 instruction slots used (2 texture, 31 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _ShadowMapTexture;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;
					    u_xlat10_2 = texture(_ShadowMapTexture, u_xlat2.xy);
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat10_2.xxx + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "FogOn" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _LightColor0;
						vec4 unused_0_2;
						vec4 _Color;
						vec4 unused_0_4[5];
						vec4 _Specular;
						float _Gloss;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[4];
						vec3 _WorldSpaceCameraPos;
						vec4 unused_1_2[4];
					};
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_2_1[44];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[4];
						vec4 glstate_lightmodel_ambient;
						vec4 unused_3_2[11];
					};
					uniform  sampler2D _MainTex;
					uniform  sampler2D _ShadowMapTexture;
					in  vec3 vs_TEXCOORD0;
					in  vec3 vs_TEXCOORD1;
					in  vec2 vs_TEXCOORD2;
					in  vec4 vs_TEXCOORD3;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec3 u_xlat1;
					vec4 u_xlat10_1;
					vec3 u_xlat2;
					vec4 u_xlat10_2;
					vec3 u_xlat3;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
					    u_xlat0.x = inversesqrt(u_xlat0.x);
					    u_xlat0.xyz = u_xlat0.xxx * _WorldSpaceLightPos0.xyz;
					    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) + _WorldSpaceCameraPos.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
					    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
					    u_xlat9 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * vs_TEXCOORD0.xyz;
					    u_xlat0.w = dot(u_xlat2.xyz, u_xlat1.xyz);
					    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
					    u_xlat0.xy = max(u_xlat0.xw, vec2(0.0, 0.0));
					    u_xlat3.x = log2(u_xlat0.y);
					    u_xlat3.x = u_xlat3.x * _Gloss;
					    u_xlat3.x = exp2(u_xlat3.x);
					    u_xlat1.xyz = _LightColor0.xyz * _Specular.xyz;
					    u_xlat3.xyz = u_xlat3.xxx * u_xlat1.xyz;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD2.xy);
					    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;
					    u_xlat2.xyz = u_xlat1.xyz * _LightColor0.xyz;
					    u_xlat1.xyz = u_xlat1.xyz * glstate_lightmodel_ambient.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + u_xlat1.xyz;
					    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat3.xyz;
					    u_xlat2.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;
					    u_xlat10_2 = texture(_ShadowMapTexture, u_xlat2.xy);
					    SV_Target0.xyz = u_xlat0.xyz * u_xlat10_2.xxx + u_xlat1.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
}
 }
 Pass {
  Cull Front
  Stencil {
   Ref 2
   Pass Replace
  }
  GpuProgramID 119351
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float _Outline;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _Outline           c4       1
					//
					
					    vs_2_0
					    def c5, 0.100000001, 1, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    mov r0.xw, c5.xyzy
					    mul r0.x, r0.x, c4.x
					    mov r1.xyz, v1
					    mad r0.xyz, r1, r0.x, v0
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					    mov oT0.xy, c5.z
					    mov oT1.xy, c5.z
					
					// approximately 10 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						float _Outline;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0.x = _Outline * 0.100000001;
					    u_xlat0.xyz = in_NORMAL0.xyz * u_xlat0.xxx + in_POSITION0.xyz;
					    u_xlat1 = u_xlat0.yyyy * glstate_matrix_mvp[1];
					    u_xlat1 = glstate_matrix_mvp[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat0 = glstate_matrix_mvp[2] * u_xlat0.zzzz + u_xlat1;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    phase0_Output0_1 = vec4(0.0, 0.0, 0.0, 0.0);
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						float _Outline;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0.x = _Outline * 0.100000001;
					    u_xlat0.xyz = in_NORMAL0.xyz * u_xlat0.xxx + in_POSITION0.xyz;
					    u_xlat1 = u_xlat0.yyyy * glstate_matrix_mvp[1];
					    u_xlat1 = glstate_matrix_mvp[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat0 = glstate_matrix_mvp[2] * u_xlat0.zzzz + u_xlat1;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    phase0_Output0_1 = vec4(0.0, 0.0, 0.0, 0.0);
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _OutlineColor;
					//
					//
					// Registers:
					//
					//   Name          Reg   Size
					//   ------------- ----- ----
					//   _OutlineColor c0       1
					//
					
					    ps_2_0
					    def c1, 1, 0, 0, 0
					    mov r0.xyz, c0
					    mov r0.w, c1.x
					    mov oC0, r0
					
					// approximately 3 instruction slots used"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[8];
						vec4 _OutlineColor;
					};
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0.xyz = _OutlineColor.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[8];
						vec4 _OutlineColor;
					};
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0.xyz = _OutlineColor.xyz;
					    SV_Target0.w = 1.0;
					    return;
					}"
}
}
 }
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" }
  GpuProgramID 165356
Program "vp" {
SubProgram "d3d9 " {
Keywords { "SHADOWS_DEPTH" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 _World2Object;
					//   float4 _WorldSpaceLightPos0;
					//   row_major float4x4 glstate_matrix_mvp;
					//   float4 unity_LightShadowBias;
					//   row_major float4x4 unity_MatrixVP;
					//
					//
					// Registers:
					//
					//   Name                  Reg   Size
					//   --------------------- ----- ----
					//   glstate_matrix_mvp    c0       4
					//   unity_MatrixVP        c4       4
					//   _Object2World         c8       3
					//   _World2Object         c11      3
					//   _WorldSpaceLightPos0  c14      1
					//   unity_LightShadowBias c15      1
					//
					
					    vs_2_0
					    def c16, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    mul r0.x, c15.z, c15.z
					    slt r0.x, -r0.x, r0.x
					    mul r0.yzw, v1.y, c12.xxyz
					    mad r0.yzw, c11.xxyz, v1.x, r0
					    mad r0.yzw, c13.xxyz, v1.z, r0
					    nrm r1.xyz, r0.yzww
					    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
					    dp4 r3.x, c8, r2
					    dp4 r3.y, c9, r2
					    dp4 r3.z, c10, r2
					    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
					    nrm r4.xyz, r0.yzww
					    dp3 r0.y, r1, r4
					    mad r0.y, r0.y, -r0.y, c16.x
					    rsq r0.y, r0.y
					    rcp r0.y, r0.y
					    mul r0.y, r0.y, c15.z
					    mad r1.xyz, r1, -r0.y, r3
					    mov r1.w, c16.x
					    dp4 r3.x, c4, r1
					    dp4 r3.y, c5, r1
					    dp4 r3.z, c6, r1
					    dp4 r3.w, c7, r1
					    dp4 r1.x, c0, r2
					    dp4 r1.y, c1, r2
					    dp4 r1.z, c2, r2
					    dp4 r1.w, c3, r2
					    lrp r2, r0.x, r3, r1
					    rcp r0.x, r2.w
					    mul r0.x, r0.x, c15.x
					    max r0.x, r0.x, c16.y
					    min r0.x, r0.x, c16.x
					    add r0.x, r0.x, r2.z
					    max r0.y, r0.x, c16.y
					    lrp r2.z, c15.y, r0.y, r0.x
					    mov oT0, r2
					    mov oPos, r2
					
					// approximately 41 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_0_1[44];
					};
					layout(std140) uniform UnityShadows {
						vec4 unused_1_0[5];
						vec4 unity_LightShadowBias;
						vec4 unused_1_2[20];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[9];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					bool u_xlatb2;
					float u_xlat6;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + _Object2World[3].xyz;
					    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
					    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);
					    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;
					    u_xlat9 = sqrt(u_xlat9);
					    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;
					    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;
					    u_xlat1 = u_xlat0.yyyy * unity_MatrixVP[1];
					    u_xlat1 = unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
					    u_xlat0 = u_xlat0 + unity_MatrixVP[3];
					    u_xlat1 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat1 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat1;
					    u_xlat1 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat1;
					    u_xlat1 = u_xlat1 + glstate_matrix_mvp[3];
					    u_xlatb2 = unity_LightShadowBias.z!=0.0;
					    u_xlat0 = (bool(u_xlatb2)) ? u_xlat0 : u_xlat1;
					    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat6 = u_xlat0.z + u_xlat1.x;
					    gl_Position.xyw = u_xlat0.xyw;
					    u_xlat0.x = max(u_xlat6, 0.0);
					    u_xlat0.x = (-u_xlat6) + u_xlat0.x;
					    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SHADOWS_DEPTH" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 _WorldSpaceLightPos0;
						vec4 unused_0_1[44];
					};
					layout(std140) uniform UnityShadows {
						vec4 unused_1_0[5];
						vec4 unity_LightShadowBias;
						vec4 unused_1_2[20];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_2_1[8];
						mat4x4 _Object2World;
						mat4x4 _World2Object;
						vec4 unused_2_4[2];
					};
					layout(std140) uniform UnityPerFrame {
						vec4 unused_3_0[9];
						mat4x4 unity_MatrixVP;
						vec4 unused_3_2[3];
					};
					in  vec4 in_POSITION0;
					in  vec3 in_NORMAL0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					vec3 u_xlat2;
					bool u_xlatb2;
					float u_xlat6;
					float u_xlat9;
					void main()
					{
					    u_xlat0.x = in_NORMAL0.x * _World2Object[0].x;
					    u_xlat0.y = in_NORMAL0.x * _World2Object[1].x;
					    u_xlat0.z = in_NORMAL0.x * _World2Object[2].x;
					    u_xlat1.x = in_NORMAL0.y * _World2Object[0].y;
					    u_xlat1.y = in_NORMAL0.y * _World2Object[1].y;
					    u_xlat1.z = in_NORMAL0.y * _World2Object[2].y;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat1.x = in_NORMAL0.z * _World2Object[0].z;
					    u_xlat1.y = in_NORMAL0.z * _World2Object[1].z;
					    u_xlat1.z = in_NORMAL0.z * _World2Object[2].z;
					    u_xlat0.xyz = u_xlat0.xyz + u_xlat1.xyz;
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
					    u_xlat1.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat1.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;
					    u_xlat1.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;
					    u_xlat1.xyz = u_xlat1.xyz + _Object2World[3].xyz;
					    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;
					    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);
					    u_xlat9 = inversesqrt(u_xlat9);
					    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
					    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);
					    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;
					    u_xlat9 = sqrt(u_xlat9);
					    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;
					    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;
					    u_xlat1 = u_xlat0.yyyy * unity_MatrixVP[1];
					    u_xlat1 = unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
					    u_xlat0 = unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
					    u_xlat0 = u_xlat0 + unity_MatrixVP[3];
					    u_xlat1 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat1 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat1;
					    u_xlat1 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat1;
					    u_xlat1 = u_xlat1 + glstate_matrix_mvp[3];
					    u_xlatb2 = unity_LightShadowBias.z!=0.0;
					    u_xlat0 = (bool(u_xlatb2)) ? u_xlat0 : u_xlat1;
					    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;
					    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
					    u_xlat6 = u_xlat0.z + u_xlat1.x;
					    gl_Position.xyw = u_xlat0.xyw;
					    u_xlat0.x = max(u_xlat6, 0.0);
					    u_xlat0.x = (-u_xlat6) + u_xlat0.x;
					    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "SHADOWS_CUBE" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _LightPositionRange;
					//   row_major float4x4 _Object2World;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   glstate_matrix_mvp  c0       4
					//   _Object2World       c4       3
					//   _LightPositionRange c7       1
					//
					
					    vs_2_0
					    dcl_position v0
					    dp4 r0.x, c4, v0
					    dp4 r0.y, c5, v0
					    dp4 r0.z, c6, v0
					    add oT0.xyz, r0, -c7
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					
					// approximately 8 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_CUBE" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 unused_0_0;
						vec4 _LightPositionRange;
						vec4 unused_0_2[43];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						vec4 unused_1_3[6];
					};
					in  vec4 in_POSITION0;
					out vec3 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD0.xyz = u_xlat0.xyz + (-_LightPositionRange.xyz);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SHADOWS_CUBE" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 unused_0_0;
						vec4 _LightPositionRange;
						vec4 unused_0_2[43];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[8];
						mat4x4 _Object2World;
						vec4 unused_1_3[6];
					};
					in  vec4 in_POSITION0;
					out vec3 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0.xyz = in_POSITION0.yyy * _Object2World[1].xyz;
					    u_xlat0.xyz = _Object2World[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = _Object2World[3].xyz * in_POSITION0.www + u_xlat0.xyz;
					    vs_TEXCOORD0.xyz = u_xlat0.xyz + (-_LightPositionRange.xyz);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
Keywords { "SHADOWS_DEPTH" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					    ps_2_0
					    dcl t0
					    rcp r0.w, t0.w
					    mul r0, r0.w, t0.z
					    mov oC0, r0
					
					// approximately 3 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_DEPTH" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SHADOWS_DEPTH" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(location = 0) out vec4 SV_Target0;
					void main()
					{
					    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "SHADOWS_CUBE" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _LightPositionRange;
					//   float4 unity_LightShadowBias;
					//
					//
					// Registers:
					//
					//   Name                  Reg   Size
					//   --------------------- ----- ----
					//   _LightPositionRange   c0       1
					//   unity_LightShadowBias c1       1
					//
					
					    ps_2_0
					    dcl t0.xyz
					    dp3 r0.w, t0, t0
					    rsq r0.x, r0.w
					    rcp r0.x, r0.x
					    add r0.x, r0.x, c1.x
					    mul r0, r0.x, c0.w
					    mov oC0, r0
					
					// approximately 6 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SHADOWS_CUBE" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 unused_0_0;
						vec4 _LightPositionRange;
						vec4 unused_0_2[43];
					};
					layout(std140) uniform UnityShadows {
						vec4 unused_1_0[5];
						vec4 unity_LightShadowBias;
						vec4 unused_1_2[20];
					};
					in  vec3 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					float u_xlat0;
					void main()
					{
					    u_xlat0 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat0 = sqrt(u_xlat0);
					    u_xlat0 = u_xlat0 + unity_LightShadowBias.x;
					    SV_Target0 = vec4(u_xlat0) * _LightPositionRange.wwww;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SHADOWS_CUBE" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityLighting {
						vec4 unused_0_0;
						vec4 _LightPositionRange;
						vec4 unused_0_2[43];
					};
					layout(std140) uniform UnityShadows {
						vec4 unused_1_0[5];
						vec4 unity_LightShadowBias;
						vec4 unused_1_2[20];
					};
					in  vec3 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					float u_xlat0;
					void main()
					{
					    u_xlat0 = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);
					    u_xlat0 = sqrt(u_xlat0);
					    u_xlat0 = u_xlat0 + unity_LightShadowBias.x;
					    SV_Target0 = vec4(u_xlat0) * _LightPositionRange.wwww;
					    return;
					}"
}
}
 }
}
}