Shader "PJ Particles/Particle_Add_NoZTest" {
Properties {
 _TintColor ("Tint Color", Color) = (0.5,0.5,0.5,0.5)
 _MainTex ("Particle Texture (A = Transparency)", 2D) = "white" { }
 _InvFade ("Soft Particles Factor", Range(0.01,3)) = 1
}
SubShader { 
 Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
  ZTest False
  Blend SrcAlpha One
  GpuProgramID 27137
Program "vp" {
SubProgram "d3d9 " {
Keywords { "SOFTPARTICLES_OFF" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _MainTex_ST        c4       1
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mad oT0.xy, v2, c4, c4.zwzw
					    mov oD0, v1
					
					// approximately 6 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SOFTPARTICLES_OFF" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SOFTPARTICLES_OFF" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "SOFTPARTICLES_ON" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   float4 _ProjectionParams;
					//   float4 _ScreenParams;
					//   row_major float4x4 glstate_matrix_modelview0;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   glstate_matrix_mvp        c0       4
					//   glstate_matrix_modelview0 c4       3
					//   _ProjectionParams         c7       1
					//   _ScreenParams             c8       1
					//   _MainTex_ST               c9       1
					//
					
					    vs_2_0
					    def c10, 0.5, 0, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    dp4 oPos.z, c2, v0
					    dp4 r0.y, c1, v0
					    mul r0.z, r0.y, c7.x
					    dp4 r0.x, c0, v0
					    dp4 r0.w, c3, v0
					    mul r1.xzw, r0.xywz, c10.x
					    mov oPos.xyw, r0
					    mov oT1.w, r0.w
					    mad oT1.xy, r1.z, c8.zwzw, r1.xwzw
					    dp4 r0.x, c6, v0
					    mov oT1.z, -r0.x
					    mad oT0.xy, v2, c9, c9.zwzw
					    mov oD0, v1
					
					// approximately 13 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "SOFTPARTICLES_ON" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_2_2[14];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD1.w = u_xlat0.w;
					    vs_TEXCOORD1.xy = u_xlat1.zz + u_xlat1.xw;
					    u_xlat0.x = in_POSITION0.y * glstate_matrix_modelview0[1].z;
					    u_xlat0.x = glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = glstate_matrix_modelview0[3].z * in_POSITION0.w + u_xlat0.x;
					    vs_TEXCOORD1.z = (-u_xlat0.x);
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SOFTPARTICLES_ON" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[7];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[5];
						vec4 _ProjectionParams;
						vec4 unused_1_2[3];
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_2_2[14];
					};
					in  vec4 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec2 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					out vec4 vs_TEXCOORD1;
					vec4 u_xlat0;
					vec4 u_xlat1;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    gl_Position = u_xlat0;
					    vs_COLOR0 = in_COLOR0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
					    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
					    vs_TEXCOORD1.w = u_xlat0.w;
					    vs_TEXCOORD1.xy = u_xlat1.zz + u_xlat1.xw;
					    u_xlat0.x = in_POSITION0.y * glstate_matrix_modelview0[1].z;
					    u_xlat0.x = glstate_matrix_modelview0[0].z * in_POSITION0.x + u_xlat0.x;
					    u_xlat0.x = glstate_matrix_modelview0[2].z * in_POSITION0.z + u_xlat0.x;
					    u_xlat0.x = glstate_matrix_modelview0[3].z * in_POSITION0.w + u_xlat0.x;
					    vs_TEXCOORD1.z = (-u_xlat0.x);
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
Keywords { "SOFTPARTICLES_OFF" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _TintColor;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _TintColor   c0       1
					//   _MainTex     s0       1
					//
					
					    ps_2_0
					    dcl v0
					    dcl t0.xy
					    dcl_2d s0
					    texld r0, t0, s0
					    mul r1, v0, c0
					    add r1, r1, r1
					    mul_pp r0, r0, r1
					    mov_pp oC0, r0
					
					// approximately 5 instruction slots used (1 texture, 4 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "SOFTPARTICLES_OFF" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _TintColor;
						vec4 unused_0_2[2];
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0 = vs_COLOR0 + vs_COLOR0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat0 * u_xlat10_1;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SOFTPARTICLES_OFF" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _TintColor;
						vec4 unused_0_2[2];
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0 = vs_COLOR0 + vs_COLOR0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat0 * u_xlat10_1;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "SOFTPARTICLES_ON" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float _InvFade;
					//   sampler2D _MainTex;
					//   float4 _TintColor;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _ZBufferParams      c0       1
					//   _TintColor          c1       1
					//   _InvFade            c2       1
					//   _MainTex            s0       1
					//   _CameraDepthTexture s1       1
					//
					
					    ps_2_0
					    def c3, 2, 0, 0, 0
					    dcl v0
					    dcl t0.xy
					    dcl t1
					    dcl_2d s0
					    dcl_2d s1
					    texldp r0, t1, s1
					    texld r1, t0, s0
					    mad r0.x, c0.z, r0.x, c0.w
					    rcp r0.x, r0.x
					    add r0.x, r0.x, -t1.z
					    mul_sat r0.x, r0.x, c2.x
					    mul_pp r0.x, r0.x, v0.w
					    mul r0.x, r0.x, c3.x
					    mul r0.w, r0.x, c1.w
					    mov r2.xyz, v0
					    mul r2.xyz, r2, c1
					    mul r0.xyz, r2, c3.x
					    mul_pp r0, r1, r0
					    mov_pp oC0, r0
					
					// approximately 14 instruction slots used (2 texture, 12 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "SOFTPARTICLES_ON" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _TintColor;
						vec4 unused_0_2;
						float _InvFade;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD1.xy / vs_TEXCOORD1.ww;
					    u_xlat10_0 = texture(_CameraDepthTexture, u_xlat0.xy);
					    u_xlat0.x = _ZBufferParams.z * u_xlat10_0.x + _ZBufferParams.w;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD1.z);
					    u_xlat0.x = u_xlat0.x * _InvFade;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat0.w = u_xlat0.x * vs_COLOR0.w;
					    u_xlat0.xyz = vs_COLOR0.xyz;
					    u_xlat0 = u_xlat0 + u_xlat0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat0 * u_xlat10_1;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "SOFTPARTICLES_ON" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _TintColor;
						vec4 unused_0_2;
						float _InvFade;
					};
					layout(std140) uniform UnityPerCamera {
						vec4 unused_1_0[7];
						vec4 _ZBufferParams;
						vec4 unused_1_2;
					};
					uniform  sampler2D _CameraDepthTexture;
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					in  vec4 vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0.xy = vs_TEXCOORD1.xy / vs_TEXCOORD1.ww;
					    u_xlat10_0 = texture(_CameraDepthTexture, u_xlat0.xy);
					    u_xlat0.x = _ZBufferParams.z * u_xlat10_0.x + _ZBufferParams.w;
					    u_xlat0.x = float(1.0) / u_xlat0.x;
					    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD1.z);
					    u_xlat0.x = u_xlat0.x * _InvFade;
					    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
					    u_xlat0.w = u_xlat0.x * vs_COLOR0.w;
					    u_xlat0.xyz = vs_COLOR0.xyz;
					    u_xlat0 = u_xlat0 + u_xlat0;
					    u_xlat0 = u_xlat0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat0 * u_xlat10_1;
					    return;
					}"
}
}
 }
}
SubShader { 
 Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
  ZTest False
  Blend SrcAlpha One
  GpuProgramID 67378
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _MainTex_ST        c4       1
					//
					
					    vs_2_0
					    def c5, 0, 1, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    max r0, v1, c5.x
					    min oD0, r0, c5.y
					    mad r0, v0.xyzx, c5.yyyx, c5.xxxy
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					    mad r0.xy, v2, c4, c4.zwzw
					    mov oT0.xy, r0
					    mov oT1.xy, r0
					
					// approximately 10 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    phase0_Output0_1 = in_TEXCOORD0.xyxy * _MainTex_ST.xyxy + _MainTex_ST.zwzw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    phase0_Output0_1 = in_TEXCOORD0.xyxy * _MainTex_ST.xyxy + _MainTex_ST.zwzw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 glstate_matrix_modelview0;
					//   row_major float4x4 glstate_matrix_mvp;
					//   float4 unity_FogParams;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   glstate_matrix_mvp        c0       4
					//   glstate_matrix_modelview0 c4       3
					//   unity_FogParams           c7       1
					//   _MainTex_ST               c8       1
					//
					
					    vs_2_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    max r0, v1, c9.y
					    min oD0, r0, c9.x
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp3 r1.x, r1, r1
					    rsq r1.x, r1.x
					    rcp r1.x, r1.x
					    mad r1.x, r1.x, c7.z, c7.w
					    max r1.x, r1.x, c9.y
					    min oT2.x, r1.x, c9.x
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					    mad r0.xy, v2, c8, c8.zwzw
					    mov oT0.xy, r0
					    mov oT1.xy, r0
					
					// approximately 19 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_1_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_2_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					out float vs_TEXCOORD2;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    phase0_Output0_1 = in_TEXCOORD0.xyxy * _MainTex_ST.xyxy + _MainTex_ST.zwzw;
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD2 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
						vec4 unused_0_2;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_1_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_2_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					 vec4 phase0_Output0_1;
					out vec2 vs_TEXCOORD1;
					out float vs_TEXCOORD2;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    phase0_Output0_1 = in_TEXCOORD0.xyxy * _MainTex_ST.xyxy + _MainTex_ST.zwzw;
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD2 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					vs_TEXCOORD0 = phase0_Output0_1.xy;
					vs_TEXCOORD1 = phase0_Output0_1.zw;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _TintColor;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _TintColor   c0       1
					//   _MainTex     s0       1
					//
					
					    ps_2_0
					    dcl v0
					    dcl t1.xy
					    dcl_2d s0
					    texld_pp r0, t1, s0
					    mul_pp r1, v0, c0
					    mul_pp r0, r0, r1
					    add_pp r0, r0, r0
					    mov_pp oC0, r0
					
					// approximately 5 instruction slots used (1 texture, 4 arithmetic)"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0 = vs_COLOR0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD1.xy);
					    u_xlat0 = u_xlat0 * u_xlat10_1;
					    SV_Target0 = u_xlat0 + u_xlat0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					void main()
					{
					    u_xlat0 = vs_COLOR0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD1.xy);
					    u_xlat0 = u_xlat0 * u_xlat10_1;
					    SV_Target0 = u_xlat0 + u_xlat0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _TintColor;
					//   float4 unity_FogColor;
					//
					//
					// Registers:
					//
					//   Name           Reg   Size
					//   -------------- ----- ----
					//   unity_FogColor c0       1
					//   _TintColor     c1       1
					//   _MainTex       s0       1
					//
					
					    ps_2_0
					    def c2, 2, 0, 0, 0
					    dcl v0
					    dcl t1.xy
					    dcl_pp t2.x
					    dcl_2d s0
					    texld_pp r0, t1, s0
					    mul_pp r1, v0, c1
					    mul_pp r0, r0, r1
					    mov r1.xyz, c0
					    mad_pp r0.xyz, r0, c2.x, -r1
					    add_pp r1.w, r0.w, r0.w
					    mad_pp r1.xyz, t2.x, r0, c0
					    mov_pp oC0, r1
					
					// approximately 8 instruction slots used (1 texture, 7 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_1_1;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD1;
					in  float vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = vs_COLOR0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD1.xy);
					    u_xlat0 = u_xlat0 * u_xlat10_1;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0, 2.0, 2.0) + (-unity_FogColor.xyz);
					    u_xlat6 = u_xlat0.w + u_xlat0.w;
					    SV_Target0.w = u_xlat6;
					    SV_Target0.xyz = vec3(vs_TEXCOORD2) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[7];
						vec4 _TintColor;
					};
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_1_1;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD1;
					in  float vs_TEXCOORD2;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat10_1;
					float u_xlat6;
					void main()
					{
					    u_xlat0 = vs_COLOR0 * _TintColor;
					    u_xlat10_1 = texture(_MainTex, vs_TEXCOORD1.xy);
					    u_xlat0 = u_xlat0 * u_xlat10_1;
					    u_xlat0.xyz = u_xlat0.xyz * vec3(2.0, 2.0, 2.0) + (-unity_FogColor.xyz);
					    u_xlat6 = u_xlat0.w + u_xlat0.w;
					    SV_Target0.w = u_xlat6;
					    SV_Target0.xyz = vec3(vs_TEXCOORD2) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
}
}
 }
}
SubShader { 
 Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
 Pass {
  Tags { "QUEUE"="Overlay" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" }
  ZTest False
  Blend SrcAlpha One
  GpuProgramID 179710
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//   _MainTex_ST        c4       1
					//
					
					    vs_2_0
					    def c5, 0, 1, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    max r0, v1, c5.x
					    min oD0, r0, c5.y
					    mad oT0.xy, v2, c4, c4.zwzw
					    mad r0, v0.xyzx, c5.yyyx, c5.xxxy
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					
					// approximately 8 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_1_1[18];
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 glstate_matrix_modelview0;
					//   row_major float4x4 glstate_matrix_mvp;
					//   float4 unity_FogParams;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   glstate_matrix_mvp        c0       4
					//   glstate_matrix_modelview0 c4       3
					//   unity_FogParams           c7       1
					//   _MainTex_ST               c8       1
					//
					
					    vs_2_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_color v1
					    dcl_texcoord v2
					    max r0, v1, c9.y
					    min oD0, r0, c9.x
					    mad oT0.xy, v2, c8, c8.zwzw
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp3 r1.x, r1, r1
					    rsq r1.x, r1.x
					    rcp r1.x, r1.x
					    mad r1.x, r1.x, c7.z, c7.w
					    max r1.x, r1.x, c9.y
					    min oT1.x, r1.x, c9.x
					    dp4 oPos.x, c0, r0
					    dp4 oPos.y, c1, r0
					    dp4 oPos.z, c2, r0
					    dp4 oPos.w, c3, r0
					
					// approximately 17 instruction slots used"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_1_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_2_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD1;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD1 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform VGlobals {
						vec4 unused_0_0[6];
						vec4 _MainTex_ST;
					};
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						mat4x4 glstate_matrix_modelview0;
						vec4 unused_1_2[14];
					};
					layout(std140) uniform UnityFog {
						vec4 unused_2_0;
						vec4 unity_FogParams;
					};
					in  vec3 in_POSITION0;
					in  vec4 in_COLOR0;
					in  vec3 in_TEXCOORD0;
					out vec4 vs_COLOR0;
					out vec2 vs_TEXCOORD0;
					out float vs_TEXCOORD1;
					vec4 u_xlat0;
					void main()
					{
					    vs_COLOR0 = in_COLOR0;
					    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);
					    u_xlat0.xyz = in_POSITION0.yyy * glstate_matrix_modelview0[1].xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;
					    u_xlat0.xyz = glstate_matrix_modelview0[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;
					    u_xlat0.xyz = u_xlat0.xyz + glstate_matrix_modelview0[3].xyz;
					    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
					    u_xlat0.x = sqrt(u_xlat0.x);
					    vs_TEXCOORD1 = u_xlat0.x * unity_FogParams.z + unity_FogParams.w;
					    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = u_xlat0 + glstate_matrix_mvp[3];
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _MainTex     s0       1
					//
					
					    ps_2_0
					    dcl v0
					    dcl t0.xy
					    dcl_2d s0
					    texld_pp r0, t0, s0
					    mul_pp r0, r0, v0
					    mov_pp oC0, r0
					
					// approximately 3 instruction slots used (1 texture, 2 arithmetic)"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat10_0;
					void main()
					{
					    u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat10_0 * vs_COLOR0;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat10_0;
					void main()
					{
					    u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    SV_Target0 = u_xlat10_0 * vs_COLOR0;
					    return;
					}"
}
SubProgram "d3d9 " {
Keywords { "FOG_LINEAR" }
					"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 unity_FogColor;
					//
					//
					// Registers:
					//
					//   Name           Reg   Size
					//   -------------- ----- ----
					//   unity_FogColor c0       1
					//   _MainTex       s0       1
					//
					
					    ps_2_0
					    dcl v0
					    dcl t0.xy
					    dcl_pp t1.x
					    dcl_2d s0
					    texld_pp r0, t0, s0
					    mad_pp r0.xyz, r0, v0, -c0
					    mul_pp r1.w, r0.w, v0.w
					    mad_pp r1.xyz, t1.x, r0, c0
					    mov_pp oC0, r1
					
					// approximately 5 instruction slots used (1 texture, 4 arithmetic)"
}
SubProgram "d3d11 " {
Keywords { "FOG_LINEAR" }
					"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_0_1;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					float u_xlat3;
					void main()
					{
					    u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz + (-unity_FogColor.xyz);
					    u_xlat3 = u_xlat10_0.w * vs_COLOR0.w;
					    SV_Target0.w = u_xlat3;
					    SV_Target0.xyz = vec3(vs_TEXCOORD1) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
}
SubProgram "d3d11_9x " {
Keywords { "FOG_LINEAR" }
					"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					layout(std140) uniform UnityFog {
						vec4 unity_FogColor;
						vec4 unused_0_1;
					};
					uniform  sampler2D _MainTex;
					in  vec4 vs_COLOR0;
					in  vec2 vs_TEXCOORD0;
					in  float vs_TEXCOORD1;
					layout(location = 0) out vec4 SV_Target0;
					vec3 u_xlat0;
					vec4 u_xlat10_0;
					float u_xlat3;
					void main()
					{
					    u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz + (-unity_FogColor.xyz);
					    u_xlat3 = u_xlat10_0.w * vs_COLOR0.w;
					    SV_Target0.w = u_xlat3;
					    SV_Target0.xyz = vec3(vs_TEXCOORD1) * u_xlat0.xyz + unity_FogColor.xyz;
					    return;
					}"
}
}
 }
}
}