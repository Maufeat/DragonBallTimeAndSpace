using System;
using System.Collections.Generic;

public static class LuaBinder
{
	public static List<string> wrapList = new List<string>();
	public static void Bind(IntPtr L, string type = null)
	{
		if (type == null || wrapList.Contains(type)) return;
		wrapList.Add(type); type += "Wrap";
		switch (type) {
			case "AnimationBlendModeWrap": AnimationBlendModeWrap.Register(L); break;
			case "AnimationClipWrap": AnimationClipWrap.Register(L); break;
			case "AnimationStateWrap": AnimationStateWrap.Register(L); break;
			case "AnimationWrap": AnimationWrap.Register(L); break;
			case "ApplicationWrap": ApplicationWrap.Register(L); break;
			case "AssetBundleWrap": AssetBundleWrap.Register(L); break;
			case "AsyncOperationWrap": AsyncOperationWrap.Register(L); break;
			case "AudioClipWrap": AudioClipWrap.Register(L); break;
			case "AudioSourceWrap": AudioSourceWrap.Register(L); break;
			case "BehaviourWrap": BehaviourWrap.Register(L); break;
			case "BlendWeightsWrap": BlendWeightsWrap.Register(L); break;
			case "BoxColliderWrap": BoxColliderWrap.Register(L); break;
			case "CameraClearFlagsWrap": CameraClearFlagsWrap.Register(L); break;
			case "CameraWrap": CameraWrap.Register(L); break;
			case "CanvasGroupWrap": CanvasGroupWrap.Register(L); break;
			case "CharacterControllerWrap": CharacterControllerWrap.Register(L); break;
			case "CharactorBaseWrap": CharactorBaseWrap.Register(L); break;
			case "ColliderWrap": ColliderWrap.Register(L); break;
			case "CommonItemWrap": CommonItemWrap.Register(L); break;
			case "ComponentWrap": ComponentWrap.Register(L); break;
			case "ConstClientWrap": ConstClientWrap.Register(L); break;
			case "ConstWrap": ConstWrap.Register(L); break;
			case "CountDownItemWrap": CountDownItemWrap.Register(L); break;
			case "cs_CharacterMapDataWrap": cs_CharacterMapDataWrap.Register(L); break;
			case "cs_CharacterMapShowWrap": cs_CharacterMapShowWrap.Register(L); break;
			case "cs_MapUserDataWrap": cs_MapUserDataWrap.Register(L); break;
			case "DebuggerWrap": DebuggerWrap.Register(L); break;
			case "DelegateFactoryWrap": DelegateFactoryWrap.Register(L); break;
			case "DelegateWrap": DelegateWrap.Register(L); break;
			case "EntitiesIDWrap": EntitiesIDWrap.Register(L); break;
			case "EntitiesManagerWrap": EntitiesManagerWrap.Register(L); break;
			case "EnumWrap": EnumWrap.Register(L); break;
			case "GameObjectWrap": GameObjectWrap.Register(L); break;
			case "GameSystemSettingsWrap": GameSystemSettingsWrap.Register(L); break;
			case "GameTimeWrap": GameTimeWrap.Register(L); break;
			case "GlobalRegisterWrap": GlobalRegisterWrap.Register(L); break;
			case "IEnumeratorWrap": IEnumeratorWrap.Register(L); break;
			case "IgnoreTimeScaleWrap": IgnoreTimeScaleWrap.Register(L); break;
			case "ImageSeperateWithAlphaWrap": ImageSeperateWithAlphaWrap.Register(L); break;
			case "InputTextCheckerWrap": InputTextCheckerWrap.Register(L); break;
			case "InputWrap": InputWrap.Register(L); break;
			case "IrregularGridLayOutWrap": IrregularGridLayOutWrap.Register(L); break;
			case "KeyCodeWrap": KeyCodeWrap.Register(L); break;
			case "KeyWordFilterWrap": KeyWordFilterWrap.Register(L); break;
			case "LightTypeWrap": LightTypeWrap.Register(L); break;
			case "LightWrap": LightWrap.Register(L); break;
			case "LuaConfigManagerWrap": LuaConfigManagerWrap.Register(L); break;
			case "LuaNetWorkManagerWrap": LuaNetWorkManagerWrap.Register(L); break;
			case "LuaPanelBaseWrap": LuaPanelBaseWrap.Register(L); break;
			case "MainPlayerWrap": MainPlayerWrap.Register(L); break;
			case "ManagerRegisterWrap": ManagerRegisterWrap.Register(L); break;
			case "MaterialWrap": MaterialWrap.Register(L); break;
			case "MeshColliderWrap": MeshColliderWrap.Register(L); break;
			case "MeshFilterWrap": MeshFilterWrap.Register(L); break;
			case "MeshRendererWrap": MeshRendererWrap.Register(L); break;
			case "MeshWrap": MeshWrap.Register(L); break;
			case "MonoBehaviourWrap": MonoBehaviourWrap.Register(L); break;
			case "NetWorkBaseWrap": NetWorkBaseWrap.Register(L); break;
			case "NpctalkRawCharactorMgrWrap": NpctalkRawCharactorMgrWrap.Register(L); break;
			case "ObjectWrap": ObjectWrap.Register(L); break;
			case "Obj_EquipDataWrap": Obj_EquipDataWrap.Register(L); break;
			case "Obj_EquipRandInfoWrap": Obj_EquipRandInfoWrap.Register(L); break;
			case "Obj_t_ObjectWrap": Obj_t_ObjectWrap.Register(L); break;
			case "Obj_t_TidyPackInfoWrap": Obj_t_TidyPackInfoWrap.Register(L); break;
			case "OtherPlayerWrap": OtherPlayerWrap.Register(L); break;
			case "ParticleAnimatorWrap": ParticleAnimatorWrap.Register(L); break;
			case "ParticleEmitterWrap": ParticleEmitterWrap.Register(L); break;
			case "ParticleRendererWrap": ParticleRendererWrap.Register(L); break;
			case "ParticleSystemWrap": ParticleSystemWrap.Register(L); break;
			case "PhysicsWrap": PhysicsWrap.Register(L); break;
			case "PlayModeWrap": PlayModeWrap.Register(L); break;
			case "PropsBaseWrap": PropsBaseWrap.Register(L); break;
			case "QualitySettingsWrap": QualitySettingsWrap.Register(L); break;
			case "QueueModeWrap": QueueModeWrap.Register(L); break;
			case "RawCharactorMgrWrap": RawCharactorMgrWrap.Register(L); break;
			case "RectTransformWrap": RectTransformWrap.Register(L); break;
			case "RendererWrap": RendererWrap.Register(L); break;
			case "RenderSettingsWrap": RenderSettingsWrap.Register(L); break;
			case "RenderTextureMgrWrap": RenderTextureMgrWrap.Register(L); break;
			case "RenderTextureWrap": RenderTextureWrap.Register(L); break;
			case "RichTextWrap": RichTextWrap.Register(L); break;
			case "RuneDataSetattributeWrap": RuneDataSetattributeWrap.Register(L); break;
			case "ScreenWrap": ScreenWrap.Register(L); break;
			case "SkinnedMeshRendererWrap": SkinnedMeshRendererWrap.Register(L); break;
			case "SleepTimeoutWrap": SleepTimeoutWrap.Register(L); break;
			case "SpaceWrap": SpaceWrap.Register(L); break;
			case "SphereColliderWrap": SphereColliderWrap.Register(L); break;
			case "SpriteWrap": SpriteWrap.Register(L); break;
			case "stringWrap": stringWrap.Register(L); break;
			case "SystemHelperWrap": SystemHelperWrap.Register(L); break;
			case "System_ObjectWrap": System_ObjectWrap.Register(L); break;
			case "Texture2DWrap": Texture2DWrap.Register(L); break;
			case "TextureWrap": TextureWrap.Register(L); break;
			case "TimeWrap": TimeWrap.Register(L); break;
			case "TipsWindowWrap": TipsWindowWrap.Register(L); break;
			case "TouchPhaseWrap": TouchPhaseWrap.Register(L); break;
			case "TrackedReferenceWrap": TrackedReferenceWrap.Register(L); break;
			case "TransformWrap": TransformWrap.Register(L); break;
			case "TweenAlphaWrap": TweenAlphaWrap.Register(L); break;
			case "TweenColorWrap": TweenColorWrap.Register(L); break;
			case "TweenPositionDirectionWrap": TweenPositionDirectionWrap.Register(L); break;
			case "TweenPositionWrap": TweenPositionWrap.Register(L); break;
			case "TweenScaleWrap": TweenScaleWrap.Register(L); break;
			case "TypeWrap": TypeWrap.Register(L); break;
			case "TypewriterEffectWrap": TypewriterEffectWrap.Register(L); break;
			case "UICenterOnChildWrap": UICenterOnChildWrap.Register(L); break;
			case "UICirculationListWrap": UICirculationListWrap.Register(L); break;
			case "UIFoldItemWrap": UIFoldItemWrap.Register(L); break;
			case "UIFoldOutListWrap": UIFoldOutListWrap.Register(L); break;
			case "UIListWrap": UIListWrap.Register(L); break;
			case "UIManagerWrap": UIManagerWrap.Register(L); break;
			case "UIManager_ParentTypeWrap": UIManager_ParentTypeWrap.Register(L); break;
			case "UITextureAssetWrap": UITextureAssetWrap.Register(L); break;
			case "UITextureMgrWrap": UITextureMgrWrap.Register(L); break;
			case "UITweenerWrap": UITweenerWrap.Register(L); break;
			case "UI_NpcDlgWrap": UI_NpcDlgWrap.Register(L); break;
			case "UnityEngine_EventSystems_EventSystemWrap": UnityEngine_EventSystems_EventSystemWrap.Register(L); break;
			case "UnityEngine_EventSystems_UIBehaviourWrap": UnityEngine_EventSystems_UIBehaviourWrap.Register(L); break;
			case "UnityEngine_Events_UnityEventBaseWrap": UnityEngine_Events_UnityEventBaseWrap.Register(L); break;
			case "UnityEngine_Events_UnityEventWrap": UnityEngine_Events_UnityEventWrap.Register(L); break;
			case "UnityEngine_UI_ButtonWrap": UnityEngine_UI_ButtonWrap.Register(L); break;
			case "UnityEngine_UI_Button_ButtonClickedEventWrap": UnityEngine_UI_Button_ButtonClickedEventWrap.Register(L); break;
			case "UnityEngine_UI_DropdownWrap": UnityEngine_UI_DropdownWrap.Register(L); break;
			case "UnityEngine_UI_GraphicWrap": UnityEngine_UI_GraphicWrap.Register(L); break;
			case "UnityEngine_UI_GridLayoutGroupWrap": UnityEngine_UI_GridLayoutGroupWrap.Register(L); break;
			case "UnityEngine_UI_HorizontalLayoutGroupWrap": UnityEngine_UI_HorizontalLayoutGroupWrap.Register(L); break;
			case "UnityEngine_UI_HorizontalOrVerticalLayoutGroupWrap": UnityEngine_UI_HorizontalOrVerticalLayoutGroupWrap.Register(L); break;
			case "UnityEngine_UI_ImageWrap": UnityEngine_UI_ImageWrap.Register(L); break;
			case "UnityEngine_UI_InputFieldWrap": UnityEngine_UI_InputFieldWrap.Register(L); break;
			case "UnityEngine_UI_InputField_OnChangeEventWrap": UnityEngine_UI_InputField_OnChangeEventWrap.Register(L); break;
			case "UnityEngine_UI_InputField_SubmitEventWrap": UnityEngine_UI_InputField_SubmitEventWrap.Register(L); break;
			case "UnityEngine_UI_LayoutElementWrap": UnityEngine_UI_LayoutElementWrap.Register(L); break;
			case "UnityEngine_UI_LayoutGroupWrap": UnityEngine_UI_LayoutGroupWrap.Register(L); break;
			case "UnityEngine_UI_LayoutRebuilderWrap": UnityEngine_UI_LayoutRebuilderWrap.Register(L); break;
			case "UnityEngine_UI_MaskableGraphicWrap": UnityEngine_UI_MaskableGraphicWrap.Register(L); break;
			case "UnityEngine_UI_RawImageWrap": UnityEngine_UI_RawImageWrap.Register(L); break;
			case "UnityEngine_UI_ScrollbarWrap": UnityEngine_UI_ScrollbarWrap.Register(L); break;
			case "UnityEngine_UI_Scrollbar_ScrollEventWrap": UnityEngine_UI_Scrollbar_ScrollEventWrap.Register(L); break;
			case "UnityEngine_UI_ScrollRectWrap": UnityEngine_UI_ScrollRectWrap.Register(L); break;
			case "UnityEngine_UI_SelectableWrap": UnityEngine_UI_SelectableWrap.Register(L); break;
			case "UnityEngine_UI_SliderWrap": UnityEngine_UI_SliderWrap.Register(L); break;
			case "UnityEngine_UI_Slider_SliderEventWrap": UnityEngine_UI_Slider_SliderEventWrap.Register(L); break;
			case "UnityEngine_UI_TextWrap": UnityEngine_UI_TextWrap.Register(L); break;
			case "UnityEngine_UI_ToggleGroupWrap": UnityEngine_UI_ToggleGroupWrap.Register(L); break;
			case "UnityEngine_UI_ToggleWrap": UnityEngine_UI_ToggleWrap.Register(L); break;
			case "UnityEngine_UI_Toggle_ToggleEventWrap": UnityEngine_UI_Toggle_ToggleEventWrap.Register(L); break;
			case "UnityEngine_UI_VerticalLayoutGroupWrap": UnityEngine_UI_VerticalLayoutGroupWrap.Register(L); break;
			case "UnityEventHelperWrap": UnityEventHelperWrap.Register(L); break;
			case "UtilWrap": UtilWrap.Register(L); break;
			case "WayFindItemWrap": WayFindItemWrap.Register(L); break;
			case "WayNodeTypeWrap": WayNodeTypeWrap.Register(L); break;
			case "WayNodeWrap": WayNodeWrap.Register(L); break;
		}
	}
}
